Parens Valid

function parensValid(str){
  var numOpen = 0;
  var numClosed = 0;
  for(var i = 0; i<str.length; i++){
    if(str[i] == '('){
      numOpen += 1;
    }
    if(str[i] == ')'){
      numClosed += 1;
    }
  }
  if(numOpen == numClosed){
    var open = false;
    var openNum = 0;
    for(var j = 0; j<str.length; j++){
      if(str[j] == '('){
        open = true;
        openNum += 1;
      }
      if(str[j] == ')'){
        if(open === false && openNum === 0){
          return false;
        }else{
          open = false;
          openNum -= 1;
        }
      }
    }

    return true;

  }else{
    return false;
  }
}

Braces Valid

function bracesValid(str){
  var aTypeOpen = 0;
  var aTypeClosed = 0;
  var bTypeOpen = 0;
  var bTypeClosed = 0;
  var cTypeOpen = 0;
  var cTypeClosed = 0;
  for(var i = 0; i<str.length; i++){
    switch (str[i]) {
      case '(': aTypeOpen++; break;
      case ')': aTypeClosed++; break;
      case '[': bTypeOpen++; break;
      case ']': bTypeClosed++; break;
      case '{': cTypeOpen++; break;
      case '}': cTypeClosed++; break;
      default: break;
    }
  }
  if(aTypeOpen == aTypeClosed && bTypeOpen == bTypeClosed && cTypeOpen == cTypeClosed){
    arrOpen = [];
    for(var k = 0; k<str.length; k++){
      if(str[k] == '('){
        arrOpen.push('a');
      } else if(str[k] == '['){
        arrOpen.push('b');
      } else if(str[k] == '{'){
        arrOpen.push('c');
      } else if(str[k] == ')'){
        if(arrOpen[arrOpen.length-1] == 'a'){
          arrOpen.pop();
        } else{
          return false;
        }
      } else if(str[k] == ']'){
        if(arrOpen[arrOpen.length-1] == 'b'){
          arrOpen.pop();
        } else{
          return false;
        }
      } else if(str[k] == '}'){
        if(arrOpen[arrOpen.length-1] == 'c'){
          arrOpen.pop();
        } else{
          return false;
        }
      }
    }
    return true; 
  }else{
    return false;
  }
}

String: Is Palindrome

function isPalindrome(str){
  if(str.length%2 === 0){
    return false
  } else{
    for(var i = 0; i<Math.floor(str.length/2); i++){
      if(str[i] != str[str.length-1-i]){
        return false;
      }
    }
    return true;
  }
}

   Second

function isPalindrome2(str){
  filtered = [];
  for(var i = 0; i<str.length; i++){
    if(str[i] == ' '){
      continue;
    } else if(str[i] == '.' || str[i] == '?' || str[i] == '!' || str[i] == ',' || str[i] == "'"){
      continue;
    } else if(str[i] == str[i].toUpperCase()){
      filtered.push(str[i].toLowerCase());
    } else{
      filtered.push(str[i]);
    }
  }
  if(filtered.length%2 === 0){
    return false
  } else{
    for(var j = 0; j<Math.floor(filtered.length/2); j++){
      if(filtered[j] != filtered[filtered.length-1-j]){
        return false;
      }
    }
    return true;
  }
}